!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.SXIntro=e():t.SXIntro=e()}(window,function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},r.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=6)}([function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var r=e.protocol+"//"+e.host,n=r+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(t,e){var o,i=e.trim().replace(/^"(.*)"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?t:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?r+i:n+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(t,e,r){var n,o,i={},a=(n=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=n.apply(this,arguments)),o}),l=function(t){var e={};return function(t){if("function"==typeof t)return t();if(void 0===e[t]){var r=function(t){return document.querySelector(t)}.call(this,t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[t]=r}return e[t]}}(),s=null,d=0,u=[],c=r(0);function p(t,e){for(var r=0;r<t.length;r++){var n=t[r],o=i[n.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](n.parts[a]);for(;a<n.parts.length;a++)o.parts.push(y(n.parts[a],e))}else{var l=[];for(a=0;a<n.parts.length;a++)l.push(y(n.parts[a],e));i[n.id]={id:n.id,refs:1,parts:l}}}}function f(t,e){for(var r=[],n={},o=0;o<t.length;o++){var i=t[o],a=e.base?i[0]+e.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};n[a]?n[a].parts.push(l):r.push(n[a]={id:a,parts:[l]})}return r}function h(t,e){var r=l(t.insertInto);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var n=u[u.length-1];if("top"===t.insertAt)n?n.nextSibling?r.insertBefore(e,n.nextSibling):r.appendChild(e):r.insertBefore(e,r.firstChild),u.push(e);else if("bottom"===t.insertAt)r.appendChild(e);else{if("object"!=typeof t.insertAt||!t.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=l(t.insertInto+" "+t.insertAt.before);r.insertBefore(e,o)}}function b(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=u.indexOf(t);e>=0&&u.splice(e,1)}function m(t){var e=document.createElement("style");return void 0===t.attrs.type&&(t.attrs.type="text/css"),g(e,t.attrs),h(t,e),e}function g(t,e){Object.keys(e).forEach(function(r){t.setAttribute(r,e[r])})}function y(t,e){var r,n,o,i;if(e.transform&&t.css){if(!(i=e.transform(t.css)))return function(){};t.css=i}if(e.singleton){var a=d++;r=s||(s=m(e)),n=w.bind(null,r,a,!1),o=w.bind(null,r,a,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(r=function(t){var e=document.createElement("link");return void 0===t.attrs.type&&(t.attrs.type="text/css"),t.attrs.rel="stylesheet",g(e,t.attrs),h(t,e),e}(e),n=function(t,e,r){var n=r.css,o=r.sourceMap,i=void 0===e.convertToAbsoluteUrls&&o;(e.convertToAbsoluteUrls||i)&&(n=c(n));o&&(n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([n],{type:"text/css"}),l=t.href;t.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}.bind(null,r,e),o=function(){b(r),r.href&&URL.revokeObjectURL(r.href)}):(r=m(e),n=function(t,e){var r=e.css,n=e.media;n&&t.setAttribute("media",n);if(t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}.bind(null,r),o=function(){b(r)});return n(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;n(t=e)}else o()}}t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=a()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var r=f(t,e);return p(r,e),function(t){for(var n=[],o=0;o<r.length;o++){var a=r[o];(l=i[a.id]).refs--,n.push(l)}t&&p(f(t,e),e);for(o=0;o<n.length;o++){var l;if(0===(l=n[o]).refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete i[l.id]}}}};var v,x=(v=[],function(t,e){return v[t]=e,v.filter(Boolean).join("\n")});function w(t,e,r,n){var o=r?"":n.css;if(t.styleSheet)t.styleSheet.cssText=x(e,o);else{var i=document.createTextNode(o),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}},function(t,e){t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var r=function(t,e){var r=t[1]||"",n=t[3];if(!n)return r;if(e&&"function"==typeof btoa){var o=(a=n,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),i=n.sources.map(function(t){return"/*# sourceURL="+n.sourceRoot+t+" */"});return[r].concat(i).concat([o]).join("\n")}var a;return[r].join("\n")}(e,t);return e[2]?"@media "+e[2]+"{"+r+"}":r}).join("")},e.i=function(t,r){"string"==typeof t&&(t=[[null,t,""]]);for(var n={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(n[i]=!0)}for(o=0;o<t.length;o++){var a=t[o];"number"==typeof a[0]&&n[a[0]]||(r&&!a[2]?a[2]=r:r&&(a[2]="("+a[2]+") and ("+r+")"),e.push(a))}},e}},function(t,e,r){(t.exports=r(2)(!1)).push([t.i,"/* 引导元素样式 */\r\n\r\n.intro-showElement, tr.intro-showElement>td, tr.intro-showElement>th {\r\n\tz-index: 9999999 !important;\r\n\tposition: relative;\r\n}\r\n\r\n/* 遮罩层样式 */\r\n\r\n.intro-overlay {\r\n\tposition: absolute;\r\n\tvisibility: hidden;\r\n\ttop: 0%;\r\n\tbottom: 0%;\r\n\tleft: 0%;\r\n\tright: 0%;\r\n\tz-index: 99999;\r\n\topacity: 0;\r\n\tbackground: -moz-radial-gradient(center, ellipse farthest-corner, rgba(0, 0, 0, 0.4) 0, rgba(0, 0, 0, 0.9) 100%);\r\n\tbackground: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%, rgba(0, 0, 0, 0.4)), color-stop(100%, rgba(0, 0, 0, 0.9)));\r\n\tbackground: -webkit-radial-gradient(center, ellipse farthest-corner, rgba(0, 0, 0, 0.4) 0, rgba(0, 0, 0, 0.9) 100%);\r\n\tbackground: -o-radial-gradient(center, ellipse farthest-corner, rgba(0, 0, 0, 0.4) 0, rgba(0, 0, 0, 0.9) 100%);\r\n\tbackground: -ms-radial-gradient(center, ellipse farthest-corner, rgba(0, 0, 0, 0.4) 0, rgba(0, 0, 0, 0.9) 100%);\r\n\tbackground: radial-gradient(center, ellipse farthest-corner, rgba(0, 0, 0, 0.4) 0, rgba(0, 0, 0, 0.9) 100%);\r\n\t-webkit-transition: opacity 0.1s ease-out;\r\n\t-moz-transition: opacity 0.1s ease-out;\r\n\t-ms-transition: opacity 0.1s ease-out;\r\n\t-o-transition: opacity 0.1s ease-out;\r\n\ttransition: opacity 0.1s ease-out;\r\n}\r\n\r\n.intro-overlay.show {\r\n\tvisibility: visible;\r\n}\r\n\r\n/* 高亮层样式 */\r\n\r\n.intro-helperLayer {\r\n\tbox-sizing: content-box;\r\n\tposition: absolute;\r\n\tz-index: 9999998;\r\n\tbackground-color: #FFF;\r\n\tbackground-color: rgba(255, 255, 255, .9);\r\n\tborder: 1px solid #777;\r\n\tborder: 1ps solide rgba(0, 0, 0, .5);\r\n\tborder-radius: 4px;\r\n\t-webkit-transition: all 0.3s ease-out;\r\n\t-moz-transition: all 0.3s ease-out;\r\n\t-moz-transition: all 0.3s ease-out;\r\n\t-ms-transition: all 0.3s ease-out;\r\n\t-o-transition: all 0.3s ease-out;\r\n\ttransition: all 0.3s ease-out;\r\n}\r\n\r\n.intro-helperLayer.intro-fixed {\r\n\tposition: fixed;\r\n}\r\n\r\n/* 引导对话框样式 */\r\n\r\n/* 定位层 */\r\n\r\n.intro-tooltipReferece {\r\n\tbox-sizing: content-box;\r\n\tposition: absolute;\r\n\tvisibility: hidden;\r\n\tz-index: 1000000000;\r\n\tbackground-color: transparent;\r\n\t-webkit-transition: all 0.3s ease-out;\r\n\t-moz-transition: all 0.3s ease-out;\r\n\t-moz-transition: all 0.3s ease-out;\r\n\t-ms-transition: all 0.3s ease-out;\r\n\t-o-transition: all 0.3s ease-out;\r\n\ttransition: all 0.3s ease-out;\r\n}\r\n\r\n.intro-tooltipReferece.intro-fixed {\r\n\tposition: fixed;\r\n}\r\n\r\n/* 对话框层 */\r\n\r\n.intro-tooltip {\r\n\tbox-sizing: content-box;\r\n\tposition: absolute;\r\n\tvisibility: visible;\r\n\tpadding: 10px;\r\n\tbackground-color: #FFF;\r\n\tmin-width: 200px;\r\n\tmax-width: 300px;\r\n\tborder-radius: 3px;\r\n\tbox-shadow: 0 1px 10px rgba(0, 0, 0, 0.4);\r\n\topacity: 0;\r\n\t-webkit-transition: opacity 0.1s ease-out;\r\n\t-moz-transition: opacity 0.1s ease-out;\r\n\t-ms-transition: opacity 0.1s ease-out;\r\n\t-o-transition: opacity 0.1s ease-out;\r\n\ttransition: opacity 0.1s ease-out\r\n}\r\n\r\n.intro-tooltip.show {\r\n\topacity: 1;\r\n}\r\n\r\n/* 对话框箭头 */\r\n\r\n.intro-arrow {\r\n\tcontent: '';\r\n\tborder: 5px solid transparent;\r\n\tposition: absolute;\r\n}\r\n\r\n.intro-arrow.top {\r\n\ttop: -10px;\r\n\tleft: 10px;\r\n\tborder-bottom-color: #FFF;\r\n}\r\n\r\n.intro-arrow.top-right {\r\n\ttop: -10px;\r\n\tright: 10px;\r\n\tborder-bottom-color: #FFF;\r\n}\r\n\r\n.intro-arrow.top-middle {\r\n\ttop: -10px;\r\n\tleft: 50%;\r\n\tborder-bottom-color: #FFF;\r\n}\r\n\r\n.intro-arrow.bottom {\r\n\tleft: 10px;\r\n\tbottom: -10px;\r\n\tborder-top-color: #FFF;\r\n}\r\n\r\n.intro-arrow.right {\r\n\ttop: 10px;\r\n\tright: -10px;\r\n\tborder-left-color: #FFF;\r\n}\r\n\r\n.intro-arrow.right-middle {\r\n\ttop: 50%;\r\n\tright: -10px;\r\n\tborder-left-color: #FFF;\r\n}\r\n\r\n.intro-arrow.left {\r\n\ttop: 10px;\r\n\tleft: -10px;\r\n\tborder-right-color: #FFF;\r\n}\r\n\r\n/* bullets */\r\n\r\n.intro-tooltipBullets {\r\n\ttext-align: center;\r\n}\r\n\r\n.intro-tooltipBullets ul {\r\n\tbox-sizing: content-box;\r\n\tclear: both;\r\n\tmargin: 15px auto 0;\r\n\tpadding: 0;\r\n\tdisplay: inline-block;\r\n}\r\n\r\n.intro-tooltipBullets ul li {\r\n\tbox-sizing: content-box;\r\n\tlist-style: none;\r\n\tfloat: left;\r\n\tmargin: 0 2px;\r\n}\r\n\r\n.intro-tooltipBullets ul li a {\r\n\tbox-sizing: content-box;\r\n\tdisplay: block;\r\n\twidth: 6px;\r\n\theight: 6px;\r\n\tbackground: #ccc;\r\n\tborder-radius: 6px;\r\n\t-moz-border-radius: 6px;\r\n\t-webkit-border-radius: 6px;\r\n\ttext-decoration: none;\r\n}\r\n\r\n.intro-tooltipBullets ul li a.active {\r\n\tbackground-color: #999;\r\n}\r\n\r\n/* buttons */\r\n\r\n.intro-tooltipButtons {\r\n\ttext-align: right;\r\n\twhite-space: nowrap;\r\n}\r\n\r\n.intro-button {\r\n\tbox-sizing: content-box;\r\n\tposition: relative;\r\n\toverflow: visible;\r\n\tdisplay: inline-block;\r\n\tpadding: 0.3em 0.8em;\r\n\tborder: 1px solid #d4d4d4;\r\n\tmargin: 10px 2px 0 0;\r\n\ttext-decoration: none;\r\n\ttext-shadow: 1px 1px 0 #fff;\r\n\tfont-size: 12px;\r\n\tcolor: #333;\r\n\twhite-space: nowrap;\r\n\tcursor: pointer;\r\n\toutline: none;\r\n\tbackground-color: #ececec;\r\n\tbackground-image: -webkit-gradient(linear, 0 0, 0 100%, from(#f4f4f4), to(#ececec));\r\n\tbackground-image: -moz-linear-gradient(#f4f4f4, #ececec);\r\n\tbackground-image: -o-linear-gradient(#f4f4f4, #ececec);\r\n\tbackground-image: linear-gradient(#f4f4f4, #ececec);\r\n\t-webkit-background-clip: padding;\r\n\t-moz-background-clip: padding;\r\n\t-o-background-clip: padding-box;\r\n\tbackground-clip: padding-box;\r\n\tborder-radius: 0.2em;\r\n}\r\n\r\n.intro-button.hide {\r\n\tdisplay: none;\r\n}\r\n\r\n.intro-button:active {\r\n\tbox-shadow: 1px 1px 1px #999 inset;\r\n\t-moz-box-shadow: 1px 1px 1px #999 inset;\r\n\t-webkit-box-shadow: 1px 1px 1px #999 inset;\r\n}\r\n\r\n.intro-disabled, .intro-disabled:hover, .intro-disabled:focus {\r\n\tcolor: #9a9a9a;\r\n\tborder-color: #d4d4d4;\r\n\tbox-shadow: none;\r\n\tcursor: not-allowed;\r\n\tbackground-color: #f4f4f4;\r\n\tbackground-image: none;\r\n\ttext-decoration: none;\r\n}",""])},function(t,e,r){var n=r(3);"string"==typeof n&&(n=[[t.i,n,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};r(1)(n,o);n.locals&&(t.exports=n.locals)},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o={String:"string",Object:"object",Function:"function",Boolean:"boolean",Array:"array",RegExp:"regexp",Number:"number"};function i(t){var e=Object.prototype.toString.call(t);return e.slice(8,e.length-1).toLowerCase()}function a(t){return i(t)===o.String}function l(t,e){return t.getAttribute(e)}e.default={deepClone:function t(e){var r=void 0;if(null===e||"object"!==("undefined"==typeof values?"undefined":n(values)))return e;if(e instanceof Date&&(r=new Date).setTime(e.getTime()),e instanceof Array){r=[];for(var o=0,i=e.length;o<i;++o)r[o]=t(e[o])}e instanceof Object&&(r={},Object.keys(e).forEach(function(n){r[n]=t(e[n])}));return r},getEleById:function(t){return i(t)===o.String?document.getElementById(t):null},isNumber:function(t){return i(t)===o.Number},isObject:function(t){return i(t)===o.Object},isString:a,isUndefined:function(t){return void 0===t},isArray:function(t){return i(t)===o.Array},querySelector:function(t,e,r){var n=t||document.body;if(!a(e)||!n.querySelectorAll)throw new Error("querySelector err");return r?n.querySelector(e):n.querySelectorAll(e)},getAttribute:l,getOffset:function(t){var e=document.body,r=document.documentElement,n=window.pageYOffset||r.scrollTop||e.scrollTop,o=window.pageXOffset||r.scrollTop||e.scrollTop,i=t.getBoundingClientRect();return{top:i.top+n,left:i.left+o,width:i.width,height:i.height,right:i.right,bottom:i.left}},addClass:function(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];if(!(e.length<2)){for(var n=e[0],o=n.className,i=void 0,a=1,l=e.length;a<l;a++)i=e[a],new RegExp(i,"ig").test(o)||(o+=" "+i);o.replace("top"," "),n.className=o}},removeClass:function(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];if(!(e.length<2)){for(var n=e[0],o=n.className,i=void 0,a=void 0,l=1,s=e.length;l<s;l++)i=e[l],(a=new RegExp("\\s+"+i,"ig")).test(o)&&(o=o.replace(a,""));n.className=o}},appendChild:function(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];var n=e[0];if(!(e.length<2))for(var o=1,i=e.length;o<i;o++)n.appendChild(e[o])},delay:function(t,e){window.setTimeout(t,e)},setAttribute:function(){if(!(arguments.length<3)){var t=arguments.length<=0?void 0:arguments[0],e=arguments.length<=1?void 0:arguments[1],r=arguments.length<=2?void 0:arguments[2];t.setAttribute(e,r)}},removeAttribute:function(){arguments.length<2||(arguments.length<=0?void 0:arguments[0]).removeAttribute(arguments.length<=1?void 0:arguments[1])},getCSSProp:function(t,e){return window.getComputedStyle(t,null).getPropertyValue(e)},parseDataStep:function(t){return(l(t,"data-step")||"").split("-").map(function(t){return parseInt(t,10)})}}},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n,o=function(){return function(t,e){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return function(t,e){var r=[],n=!0,o=!1,i=void 0;try{for(var a,l=t[Symbol.iterator]();!(n=(a=l.next()).done)&&(r.push(a.value),!e||r.length!==e);n=!0);}catch(t){o=!0,i=t}finally{try{!n&&l.return&&l.return()}finally{if(o)throw i}}return r}(t,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),i=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}(),a=r(5),l=(n=a)&&n.__esModule?n:{default:n};r(4);var s=function(){function t(e,r){var n=this;((function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")})(this,t),this.id=e,this.targetElement=null,this.introItems=[],this.options={nextLabel:"下一步",prevLabel:"上一步",skipLabel:"跳过",finishLabel:"完成",nextLabelHide:!1,prevLabelHide:!1,skipLabelHide:!1,tooltipPosition:"bottom",overlayOpacity:.8,helperElementPadding:10},this.intros=[],this.initIntroElem=!1,this.currentStep=0,this.lastStep=0,this.helperLayer=null,this.tooltipReferenceLayer=null,this.overlay=null,r)&&Object.keys(this.options).forEach(function(t){n.options[t]=r[t]});return this}return i(t,[{key:"setIntro",value:function(t){if(!l.default.isArray(t))throw new Error("params must be a array");this.intros=t;var e=this;return this.introItems.forEach(function(t,r){t.intro=e.intros[r+1]}),this}},{key:"start",value:function(){return this._getTargetElem(this.id),this._getIntroItems("*[data-step]"),this._createIntroElem(),this._addEventListener(),this._step(0),this}},{key:"_getTargetElem",value:function(t){l.default.isUndefined(t)?this.targetElement=document.body:l.default.isString(t)&&(this.targetElement=l.default.getEleById(t))}},{key:"_getIntroItems",value:function(t){var e=this,r=l.default.querySelector(this.targetElement,t);this.introItems=[];for(var n=function(t,n){var o=r[t];l.default.parseDataStep(o).forEach(function(t){l.default.isNumber(t)&&e.introItems.push({elem:o,intro:"",step:t})})},o=0,i=r.length;o<i;o++)n(o);this.introItems.sort(function(t,e){return t.step-e.step}),this.totalSteps=this.introItems.length}},{key:"_createIntroElem",value:function(){for(var t=this.options,e=this.targetElement,r=this.introItems.length,n=document.createElement("div"),o=document.createElement("div"),i=document.createElement("div"),a=document.createElement("div"),s=document.createElement("div"),d=document.createElement("div"),u=document.createElement("div"),c=document.createElement("ul"),p=document.createElement("div"),f=document.createElement("button"),h=document.createElement("button"),b=document.createElement("button"),m=[],g=[],y=0;y<r;y++)m[y]=document.createElement("li"),g[y]=document.createElement("a");n.style.opacity=t.overlayOpacity,f.innerHTML=t.skipLabel,h.innerHTML=t.prevLabel,b.innerHTML=t.nextLabel,l.default.addClass(n,"intro-overlay","show"),l.default.addClass(o,"intro-helperLayer"),l.default.addClass(i,"intro-tooltipReferece"),l.default.addClass(a,"intro-tooltip"),l.default.addClass(s,"intro-arrow"),l.default.addClass(d,"intro-tooltipText"),l.default.addClass(u,"intro-tooltipBullets"),l.default.addClass(p,"intro-tooltipButtons"),l.default.addClass(f,"intro-button"),l.default.addClass(h,"intro-button"),l.default.addClass(b,"intro-button"),t.skipLabelHide&&l.default.addClass(f,"hide"),t.prevLabelHide&&l.default.addClass(h,"hide"),t.nextLabelHide&&l.default.addClass(b,"hide");for(var v=0;v<r;v++)l.default.appendChild(m[v],g[v]),l.default.appendChild(c,m[v]);l.default.appendChild(u,c),l.default.appendChild(p,f,h,b),l.default.appendChild(a,s,d,u,p),l.default.appendChild(i,a),l.default.appendChild(e,n),l.default.appendChild(e,o),l.default.appendChild(e,i),this.helperLayer=o,this.tooltipReferenceLayer=i,this.overlay=n,this.initIntroElem=!0}},{key:"_addEventListener",value:function(){var t=this.tooltipReferenceLayer,e=l.default.querySelector(t,".intro-button");if(3===e.length){var r=o(e,3),n=r[0],i=r[1],a=r[2];n.addEventListener("click",this._done.bind(this)),i.addEventListener("click",this._step.bind(this,-1)),a.addEventListener("click",this._step.bind(this,1))}}},{key:"_setMainLayerPositon",value:function(){var t=this.introItems,e=this.options,r=this.helperLayer,n=this.tooltipReferenceLayer,o=t[this.currentStep].elem,i=l.default.getOffset(o);"fixed"===l.default.getCSSProp(o,"position")?(l.default.addClass(r,"intro-fixed"),l.default.addClass(n,"intro-fixed")):(l.default.removeClass(r,"intro-fixed"),l.default.removeClass(n,"intro-fixed")),r.style.left=i.left-e.helperElementPadding/2+"px",r.style.top=i.top-e.helperElementPadding/2+"px",r.style.width=i.width+e.helperElementPadding+"px",r.style.height=i.height+e.helperElementPadding+"px",n.style.left=i.left-e.helperElementPadding/2+"px",n.style.top=i.top-e.helperElementPadding/2+"px",n.style.width=i.width+e.helperElementPadding+"px",n.style.height=i.height+e.helperElementPadding+"px"}},{key:"_setTooltipLayerPosition",value:function(){var t=this.options,e=this.tooltipReferenceLayer,r=this.introItems,n=this.currentStep,o=this.intros,i=r[this.currentStep].elem,a=l.default.getOffset(i),s=l.default.querySelector(e,".intro-tooltip",!0),d=l.default.querySelector(s,".intro-arrow",!0),u=void 0,c=void 0,p=void 0,f=void 0,h=o[n].position;switch(l.default.removeClass(d,"bottom","top","right","left"),h){case"bottom":c=a.height+t.helperElementPadding+10+"px",l.default.addClass(d,"top");break;case"top":p=a.height+t.helperElementPadding+10+"px",l.default.addClass(d,"bottom");break;case"left":f=a.width+t.helperElementPadding+10+"px",l.default.addClass(d,"right");break;case"right":u=a.width+t.helperElementPadding+10+"px",l.default.addClass(d,"left");break;default:c=a.height+t.helperElementPadding+10+"px"}s.style.left=void 0===u?"":u,s.style.top=void 0===c?"":c,s.style.bottom=void 0===p?"":p,s.style.right=void 0===f?"":f}},{key:"_setTooltipLayerContent",value:function(){var t=this.tooltipReferenceLayer,e=this.intros,r=l.default.querySelector(t,".intro-tooltipText",!0),n=e[this.currentStep].tooltip;r.innerHTML=String(n||"")}},{key:"_showTooltipLayer",value:function(t){var e=this.tooltipReferenceLayer,r=l.default.querySelector(e,".intro-tooltip",!0);t&&l.default.isNumber(t)&&t>0?l.default.delay(function(){l.default.addClass(r,"show")},t):l.default.addClass(r,"show")}},{key:"_hideTooltipLayer",value:function(t){var e=this.tooltipReferenceLayer,r=l.default.querySelector(e,".intro-tooltip",!0);t&&l.default.isNumber(t)&&t>0?l.default.delay(function(){l.default.removeClass(r,"show")},t):l.default.removeClass(r,"show")}},{key:"_toggleShowElem",value:function(t){var e=this.introItems,r=this.currentStep,n=e[this.lastStep].elem,o=e[r].elem,i=function(){n&&l.default.removeClass(n,"intro-showElement"),o&&l.default.addClass(o,"intro-showElement")};t?l.default.delay(i,t):i()}},{key:"_changeBulletsStatus",value:function(){var t=this.currentStep,e=this.tooltipReferenceLayer,r=l.default.querySelector(e,"a");r.forEach(function(t){l.default.removeClass(t,"active")}),l.default.addClass(r[t],"active")}},{key:"_changeButtonsStatus",value:function(){var t=this.currentStep,e=this.totalSteps,r=this.options,n=l.default.querySelector(this.tooltipReferenceLayer,".intro-button");if(3!==n.length)throw new Error("buttons num is wrong!");var i=o(n,3),a=i[0],s=i[1],d=i[2];l.default.removeClass(s,"intro-disabled"),l.default.removeAttribute(s,"disabled"),l.default.removeClass(d,"intro-disabled"),l.default.removeAttribute(d,"disabled"),0===t?(s.setAttribute("disabled","disabled"),l.default.addClass(s,"intro-disabled")):t===e-1&&(d.setAttribute("disabled","disabled"),l.default.addClass(d,"intro-disabled"),a.innerText=r.finishLabel)}},{key:"_step",value:function(t){var e=this;switch(t){case 0:this.lastStep=this.currentStep;break;case 1:this.currentStep<this.totalSteps-1&&(this.lastStep=this.currentStep,this.currentStep++,this._hideTooltipLayer());break;case-1:this.currentStep>0&&(this.lastStep=this.currentStep,this.currentStep--,this._hideTooltipLayer())}l.default.delay(function(){e._setMainLayerPositon(),e._toggleShowElem(),e._setTooltipLayerPosition(),e._setTooltipLayerContent(),e._changeBulletsStatus(),e._changeButtonsStatus(),e._showTooltipLayer(300)},100)}},{key:"_done",value:function(){var t=this.introItems,e=this.currentStep,r=this.overlay,n=this.helperLayer,o=this.tooltipReferenceLayer;l.default.removeClass(t[e].elem,"intro-showElement"),l.default.removeClass(r,"show"),this._hideTooltipLayer(),r.remove(),n.remove(),o.remove(),this.initIntroElem=!1,this.currentStep=0,this.totalSteps=0,this.introItems=[]}}]),t}();e.default=s}]).default});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,